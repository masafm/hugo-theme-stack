[{"content":"Generate config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 mkdir server client wg genkey | tee server/server.key | wg pubkey \u0026gt; server/server.pub wg genkey | tee client/client.key | wg pubkey \u0026gt; client/client.pub cat \u0026lt;\u0026lt;EOF \u0026gt;server/wg0.conf [Interface] ListenPort = \u0026lt;PORT\u0026gt; PrivateKey = $(cat server/server.key) Address = 169.254.255.1/28 PostUp = iptables -t nat -A POSTROUTING -o ens5 -s 169.254.255.0/24 -j MASQUERADE PostDown = iptables -t nat -D POSTROUTING -o ens5 -s 169.254.255.0/24 -j MASQUERADE [Peer] #Mac PublicKey = $(cat client/client.pub) AllowedIPs = 169.254.255.2/32 EOF cat \u0026lt;\u0026lt;EOF \u0026gt;client/wg0.conf [Interface] PrivateKey = $(cat client/client.key) Address = 169.254.255.2/28 [Peer] PublicKey = $(cat server/server.pub) AllowedIPs = 169.254.255.0/28,\u0026lt;YOUR SUBNET\u0026gt; Endpoint = \u0026lt;ENDPOIND\u0026gt;:\u0026lt;PORT\u0026gt; PersistentKeepalive = 25 EOF Server Side Copy server/wg0.conf to /etc/wireguard/\n1 2 systemctl enable wg-quick@wg0 systemctl start wg-quick@wg0 Client Side 1 brew install wireguard-go wireguard-tools Copy client/wg0.conf to /opt/homebrew/etc/wireguard/\n1 2 sudo wg-quick up wg0 sudo wg show AWS ENI settings Disable source/destination check\n","date":"2024-02-09T10:09:53+09:00","permalink":"https://mkashi.com/p/wireguard%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97%E3%83%A1%E3%83%A2/","title":"Wireguardセットアップメモ"},{"content":"xfce4､Ubuntu Desktop､日本語パックのインストール\n1 apt install xfce4 xfce4-goodies ubuntu-desktop fonts-noto-cjk language-pack-ja ロケールを日本語に変更､またGUIの言語サポートからGUI用の日本語パックも入れる\n1 localectl set-locale LANG=ja_JP.UTF-8 xface4だとIBusに関する追加設定が必要(参考) /etc/environment\n1 2 3 GTK_IM_MODULE=ibus QT_IM_MODULE=ibus XMODIFIERS=@im=ibus 下記コマンドを自動起動するように設定\n1 ibus-daemon -drxR ","date":"2024-01-05T10:17:25+09:00","permalink":"https://mkashi.com/p/ubuntu-server-22.04.3-lts-%E3%81%A7xfce4%E3%81%A8%E6%97%A5%E6%9C%AC%E8%AA%9E%E7%92%B0%E5%A2%83%E3%81%AE%E6%A7%8B%E7%AF%89/","title":"Ubuntu Server 22.04.3 LTS でxfce4と日本語環境の構築"},{"content":"ノードごとにMailToリソースを作って各ノードに割り当てる。 mailコマンドが必要なので入ってない場合は事前に入れる。\n1 2 3 4 5 6 7 8 9 # ノード1の監視 pcs resource create MailTo1 ocf:heartbeat:MailTo email=\u0026#34;\u0026lt;メールアドレス\u0026gt;\u0026#34; pcs constraint location MailTo1 prefers \u0026lt;ノード1\u0026gt; # ノード2の監視 pcs resource create MailTo2 ocf:heartbeat:MailTo email=\u0026#34;\u0026lt;メールアドレス\u0026gt;\u0026#34; pcs constraint location MailTo2 prefers \u0026lt;ノード2\u0026gt; # ノード3の監視 pcs resource create MailTo1 ocf:heartbeat:MailTo email=\u0026#34;\u0026lt;メールアドレス\u0026gt;\u0026#34; pcs constraint location MailTo3 prefers \u0026lt;ノード3\u0026gt; ","date":"2021-05-30T10:17:25+09:00","permalink":"https://mkashi.com/p/pacemaker%E3%81%A7%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%81%AEha%E3%82%92%E7%9B%A3%E8%A6%96%E3%81%99%E3%82%8B/","title":"PacemakerでリソースのHAを監視する"},{"content":"NTPはクライアント側のローカルに持っているハードウェアクロックとNTPサーバ側の時刻情報をしばらく比較した後に、NTPサーバ側がクライアントをrejectするかどうか決めるようである。その時にクライアント側のハードウェアクロックがあまりにも精度が悪いとサーバとの距離が遠いと判断されてflash=400 peer_distとしてrejectされる。jitterの値も1198.290と非常に高い。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 [root@m75s-1-host ~]# ntpq -c as ind assid status conf reach auth condition last_event cnt =========================================================== 1 47715 9024 yes yes none reject reachable 2 [root@m75s-1-host ~]# ntpq -c \u0026#34;rv 47715\u0026#34; associd=47715 status=9024 conf, reach, sel_reject, 2 events, reachable, srcadr=raspberrypi.mkashi.com, srcport=123, dstadr=192.168.151.241, dstport=123, leap=00, stratum=2, precision=-18, rootdelay=3.922, rootdisp=5.783, refid=133.243.238.164, reftime=e4118348.66206e7a Fri, Apr 2 2021 11:49:28.398, rec=e41183d1.b1b84388 Fri, Apr 2 2021 11:51:45.694, reach=037, unreach=0, hmode=3, pmode=4, hpoll=6, ppoll=6, headway=1, flash=400 peer_dist, keyid=0, offset=1869.194, delay=0.979, dispersion=438.293, jitter=1198.290, xleave=0.265, filtdelay= 0.98 0.94 0.67 0.43 1.05 0.00 0.00 0.00, filtoffset= 1869.19 1441.02 1006.12 557.80 109.76 0.00 0.00 0.00, filtdisp= 0.00 0.96 1.94 2.94 3.95 16000.0 16000.0 16000.0 ハードウェアクロックはm75sだとtsc, hpet, acpi_pmの中から選べる。tscが一番精度が高いのでtscがデフォルトになっているようである。ただm75sではtscの精度が悪く、実際の時間に比べてめちゃくちゃ進むのが遅くてNTPサーバから距離が遠いと判断されてしまうようだ。hpetだと問題なく同期できるようになるのでkernelの起動パラメータにclocksource=hpetを設定する。\n1 2 3 4 [root@m75s-1-host ~]# cat /sys/devices/system/clocksource/clocksource0/available_clocksource tsc hpet acpi_pm [root@m75s-1-host ~]# cat /sys/devices/system/clocksource/clocksource0/current_clocksource tsc hpetに変更後は下記の通りNTPサーバと同期できるようになった。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 [root@m75s-1-host ~]# ntpq -c as ind assid status conf reach auth condition last_event cnt =========================================================== 1 35947 963a yes yes none sys.peer sys_peer 3 [root@m75s-1-host ~]# ntpq -c \u0026#34;rv 35947\u0026#34; associd=35947 status=963a conf, reach, sel_sys.peer, 3 events, sys_peer, srcadr=raspberrypi.mkashi.com, srcport=123, dstadr=192.168.151.241, dstport=123, leap=00, stratum=2, precision=-18, rootdelay=4.929, rootdisp=29.007, refid=133.243.238.164, reftime=e4125f84.662e55a0 Sat, Apr 3 2021 3:29:08.399, rec=e4126306.366cee04 Sat, Apr 3 2021 3:44:06.212, reach=377, unreach=0, hmode=3, pmode=4, hpoll=9, ppoll=9, headway=0, flash=00 ok, keyid=0, offset=0.164, delay=0.866, dispersion=11.731, jitter=0.211, xleave=0.235, filtdelay= 1.02 0.87 1.11 0.99 1.80 1.01 0.98 1.01, filtoffset= 0.24 0.16 0.08 -0.12 0.15 -0.09 -0.09 -0.13, filtdisp= 0.01 4.03 8.08 12.07 16.12 19.99 23.86 27.86 kernel 4.19.84-2.el7.nutanix.20190916.276.x86_64ではtscで同期できなかったが、5.8.0-55-genericでは特に問題なくデフォルトのままで同期できた。kernelのバグかもしれない。\n参考: http://log.or.cz/?p=80\n","date":"2021-04-02T10:17:25+09:00","permalink":"https://mkashi.com/p/lenovo-m75s-small-gen2%E3%81%A7ntp%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%A8%E5%90%8C%E6%9C%9F%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84/","title":"Lenovo m75s small gen2でNTPサーバーと同期できない"},{"content":"使用しているkernelはNutanix CEのAHVに付属の4.19.84-2.el7.nutanix.20190916.276.x86_64。基本的にRHEL7のものと同じと思われる。\nACS overrideを有効にすることで内蔵のSATAコントローラのIOMMUグループが12に変わり他のPCIデバイスが同じグループ内にない状態になったので、CVMにSATAコントローラ単体でパススルーすることができるようになった。ACS overrideがないとホスト側に必要なPCIデバイスまでパススルーされてしまいホストごとパニックしてしまう。\nACS overrideパッチ適用前\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 IOMMU Group 0 00:01.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe Dummy Host Bridge [1022:1632] IOMMU Group 10 02:00.0 USB controller [0c03]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ef] IOMMU Group 10 02:00.1 SATA controller [0106]: Advanced Micro Devices, Inc. [AMD] Device [1022:43eb] IOMMU Group 10 02:00.2 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43e9] IOMMU Group 10 03:00.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 10 03:01.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 10 03:02.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 10 03:03.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 10 03:04.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 10 03:08.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 10 03:09.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 10 07:00.0 USB controller [0c03]: Renesas Technology Corp. uPD720202 USB 3.0 Host Controller [1912:0015] (rev 02) IOMMU Group 10 09:00.0 Ethernet controller [0200]: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller [10ec:8168] (rev 0e) IOMMU Group 11 0b:00.0 Non-Volatile memory controller [0108]: Samsung Electronics Co Ltd NVMe SSD Controller SM981/PM981/PM983 [144d:a808] IOMMU Group 1 00:01.1 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe GPP Bridge [1022:1633] IOMMU Group 2 00:02.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe Dummy Host Bridge [1022:1632] IOMMU Group 3 00:02.1 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe GPP Bridge [1022:1634] IOMMU Group 4 00:02.2 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe GPP Bridge [1022:1634] IOMMU Group 5 00:08.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe Dummy Host Bridge [1022:1632] IOMMU Group 5 00:08.1 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Renoir Internal PCIe GPP Bridge to Bus [1022:1635] IOMMU Group 5 0c:00.0 VGA compatible controller [0300]: Advanced Micro Devices, Inc. [AMD/ATI] Renoir [1002:1636] (rev d8) IOMMU Group 5 0c:00.1 Audio device [0403]: Advanced Micro Devices, Inc. [AMD/ATI] Device [1002:1637] IOMMU Group 5 0c:00.2 Encryption controller [1080]: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 10h-1fh) Platform Security Processor [1022:15df] IOMMU Group 5 0c:00.3 USB controller [0c03]: Advanced Micro Devices, Inc. [AMD] Renoir USB 3.1 [1022:1639] IOMMU Group 5 0c:00.4 USB controller [0c03]: Advanced Micro Devices, Inc. [AMD] Renoir USB 3.1 [1022:1639] IOMMU Group 5 0c:00.5 Multimedia controller [0480]: Advanced Micro Devices, Inc. [AMD] Raven/Raven2/FireFlight/Renoir Audio Processor [1022:15e2] (rev 01) IOMMU Group 5 0c:00.6 Audio device [0403]: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 10h-1fh) HD Audio Controller [1022:15e3] IOMMU Group 6 00:14.0 SMBus [0c05]: Advanced Micro Devices, Inc. [AMD] FCH SMBus Controller [1022:790b] (rev 51) IOMMU Group 6 00:14.3 ISA bridge [0601]: Advanced Micro Devices, Inc. [AMD] FCH LPC Bridge [1022:790e] (rev 51) IOMMU Group 7 00:18.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 0 [1022:1448] IOMMU Group 7 00:18.1 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 1 [1022:1449] IOMMU Group 7 00:18.2 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 2 [1022:144a] IOMMU Group 7 00:18.3 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 3 [1022:144b] IOMMU Group 7 00:18.4 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 4 [1022:144c] IOMMU Group 7 00:18.5 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 5 [1022:144d] IOMMU Group 7 00:18.6 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 6 [1022:144e] IOMMU Group 7 00:18.7 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 7 [1022:144f] IOMMU Group 8 01:00.0 Ethernet controller [0200]: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection [8086:10fb] (rev 01) IOMMU Group 9 01:00.1 Ethernet controller [0200]: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection [8086:10fb] (rev 01) ACS overrideパッチ適用後 pcie_acs_override=downstream,multifunctionを設定して再起動\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 IOMMU Group 0 00:01.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe Dummy Host Bridge [1022:1632] IOMMU Group 10 01:00.1 Ethernet controller [0200]: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection [8086:10fb] (rev 01) IOMMU Group 11 02:00.0 USB controller [0c03]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ef] IOMMU Group 12 02:00.1 SATA controller [0106]: Advanced Micro Devices, Inc. [AMD] Device [1022:43eb] IOMMU Group 13 02:00.2 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43e9] IOMMU Group 14 03:00.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 15 03:01.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 16 03:02.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 17 03:03.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 18 03:04.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 19 03:08.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 1 00:01.1 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe GPP Bridge [1022:1633] IOMMU Group 20 03:09.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Device [1022:43ea] IOMMU Group 21 07:00.0 USB controller [0c03]: Renesas Technology Corp. uPD720202 USB 3.0 Host Controller [1912:0015] (rev 02) IOMMU Group 22 09:00.0 Ethernet controller [0200]: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller [10ec:8168] (rev 0e) IOMMU Group 23 0b:00.0 Non-Volatile memory controller [0108]: Samsung Electronics Co Ltd NVMe SSD Controller SM981/PM981/PM983 [144d:a808] IOMMU Group 24 0c:00.0 VGA compatible controller [0300]: Advanced Micro Devices, Inc. [AMD/ATI] Renoir [1002:1636] (rev d8) IOMMU Group 25 0c:00.1 Audio device [0403]: Advanced Micro Devices, Inc. [AMD/ATI] Device [1002:1637] IOMMU Group 26 0c:00.2 Encryption controller [1080]: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 10h-1fh) Platform Security Processor [1022:15df] IOMMU Group 27 0c:00.3 USB controller [0c03]: Advanced Micro Devices, Inc. [AMD] Renoir USB 3.1 [1022:1639] IOMMU Group 28 0c:00.4 USB controller [0c03]: Advanced Micro Devices, Inc. [AMD] Renoir USB 3.1 [1022:1639] IOMMU Group 29 0c:00.5 Multimedia controller [0480]: Advanced Micro Devices, Inc. [AMD] Raven/Raven2/FireFlight/Renoir Audio Processor [1022:15e2] (rev 01) IOMMU Group 2 00:02.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe Dummy Host Bridge [1022:1632] IOMMU Group 30 0c:00.6 Audio device [0403]: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 10h-1fh) HD Audio Controller [1022:15e3] IOMMU Group 3 00:02.1 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe GPP Bridge [1022:1634] IOMMU Group 4 00:02.2 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe GPP Bridge [1022:1634] IOMMU Group 5 00:08.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir PCIe Dummy Host Bridge [1022:1632] IOMMU Group 6 00:08.1 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD] Renoir Internal PCIe GPP Bridge to Bus [1022:1635] IOMMU Group 7 00:14.0 SMBus [0c05]: Advanced Micro Devices, Inc. [AMD] FCH SMBus Controller [1022:790b] (rev 51) IOMMU Group 7 00:14.3 ISA bridge [0601]: Advanced Micro Devices, Inc. [AMD] FCH LPC Bridge [1022:790e] (rev 51) IOMMU Group 8 00:18.0 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 0 [1022:1448] IOMMU Group 8 00:18.1 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 1 [1022:1449] IOMMU Group 8 00:18.2 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 2 [1022:144a] IOMMU Group 8 00:18.3 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 3 [1022:144b] IOMMU Group 8 00:18.4 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 4 [1022:144c] IOMMU Group 8 00:18.5 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 5 [1022:144d] IOMMU Group 8 00:18.6 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 6 [1022:144e] IOMMU Group 8 00:18.7 Host bridge [0600]: Advanced Micro Devices, Inc. [AMD] Renoir Device 24: Function 7 [1022:144f] IOMMU Group 9 01:00.0 Ethernet controller [0200]: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection [8086:10fb] (rev 01) 参考: archlinux wiki\n","date":"2021-03-28T10:18:25+09:00","permalink":"https://mkashi.com/p/lenovo-m75s-gen2%E3%81%A7kernel%E3%81%ABacs-override%E3%83%91%E3%83%83%E3%83%81%E3%82%92%E5%BD%93%E3%81%A6%E3%81%A6iommu%E3%82%B0%E3%83%AB%E3%83%BC%E3%83%97%E3%82%92%E5%88%86%E5%89%B2%E3%81%99%E3%82%8B/","title":"Lenovo m75s gen2でkernelにACS overrideパッチを当ててIOMMUグループを分割する"},{"content":"インストール前に下記のスライドは必読 https://www.slideshare.net/smzksts/nutanix-community-edition-518\nドライブ構成はUSBメモリ(AHV), NVMe(CVM), SATA SSD(CVM), SATA HDD(DATA) m75s gen2で躓いたポイントは以下\nUSBからブート後、一度USBを抜き差ししないとStandardError: Failed command: [hdparm -z /dev/sdc] with reason [BLKRRPART failed: Device or resource busy]というメッセージが出てインストーラが起動しない 上記スライド p19 「インストール準備 起動優先度の設定 • に入り、 起動デバイスの優先順位を変更し、 インストーラー メモリが 最上位となるように設定する • キーや キー等 機種によって異なる で 入れるブートデバイス手動選択画面から 起動すると、なぜかスクリーンサイズ不足に なってしまい、インストールを続行できない （報告多数）」に従ってもインストールが続行できなかった。しょうがないのでUSB NIC(QNA-UC5G1T)をつないでsshdを起動し./ce_installer \u0026amp;\u0026amp; screen -rでインストールを行った。 CVM用にNVMeを選択した場合は、NVMeのメーカーによってはインストール後、CVMのブートに失敗する。Transcend TS512GMTE110Sだと失敗、Samsung 970 EVOだと成功した。これはTS512GMTE110Sに採用されてるSMIのコントローラチップのバグのせいっぽい。https://bugzilla.kernel.org/show_bug.cgi?id=20205 起動失敗時はQemuのログを見ると下記のようなメッセージが出ていた。\n1 qemu-system-x86_64: -device vfio-pci,host=01:00.0,id=hostdev2,bus=pci.0,addr=0x8: vfio error: 0000:01:00.0: failed to add PCI capability 0x11[0x50]@0xb0: table \u0026amp; pba overlap, or they don\u0026#39;t fit in BARs, or don\u0026#39;t align ","date":"2021-03-28T10:17:25+09:00","permalink":"https://mkashi.com/p/lenovo-m75s-gen2-small%E3%81%ABnutanix-ce-2020.09.16%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B/","title":"Lenovo m75s gen2 smallにNutanix CE 2020.09.16を入れる"},{"content":"AHV用にACS overrideパッチを当てたkernelビルドしたらpanicした。 ソースを見たがよくわからないので放置。 パッチは無関係で暗号化のセルフテスト周りでpanicしているようである。 FIPSをオフにすればこのセルフテストは動かなくなる。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 [ 1.346310] alg: self-tests for sha1-ssse3 (sha1) passed [ 1.346392] alg: self-tests for sha1-ni (sha1) passed [ 1.349783] alg: self-tests for sha256-ssse3 (sha256) passed [ 1.349884] alg: self-tests for sha224-ssse3 (sha224) passed [ 1.350011] alg: self-tests for sha256-ni (sha256) passed [ 1.350058] alg: self-tests for sha224-ni (sha224) passed [ 1.357928] alg: self-tests for sha512-generic (sha512) passed [ 1.357997] alg: self-tests for sha384-generic (sha384) passed [ 1.360691] alg: self-tests for sha512-ssse3 (sha512) passed [ 1.360762] alg: self-tests for sha384-ssse3 (sha384) passed [ 1.374665] CPU feature \u0026#39;AVX registers\u0026#39; is not supported. [ 1.410444] alg: self-tests for sha1 (sha1) passed [ 1.410566] alg: self-tests for ecb(des3_ede) (ecb(des3_ede)) passed [ 1.410687] alg: self-tests for cbc(des3_ede) (cbc(des3_ede)) passed [ 1.410838] alg: self-tests for ctr(des3_ede) (ctr(des3_ede)) passed [ 1.410861] alg: self-tests for sha256 (sha256) passed [ 1.410897] alg: self-tests for ecb(aes) (ecb(aes)) passed [ 1.410935] alg: self-tests for cbc(aes) (cbc(aes)) passed [ 1.410973] alg: self-tests for xts(aes) (xts(aes)) passed [ 1.411013] alg: self-tests for ctr(aes) (ctr(aes)) passed [ 1.413166] alg: self-tests for rfc3686(ctr-aes-aesni) (rfc3686(ctr(aes))) passed [ 1.413230] alg: self-tests for rfc3686(ctr(aes)) (rfc3686(ctr(aes))) passed [ 1.415995] alg: skcipher: Failed to load transform for cfb(aes): -2 [ 1.415999] Kernel panic - not syncing: cfb(aes): cfb(aes) alg self test failed in fips mode! [ 1.416347] CPU: 1 PID: 407 Comm: modprobe Not tainted 4.19.84-300.el7.x86_64 #1 [ 1.416577] Hardware name: Nutanix AHV, BIOS 1.11.0-2.el7 04/01/2014 [ 1.416776] Call Trace: [ 1.416934] dump_stack+0x64/0x83 [ 1.417087] panic+0xe8/0x25c [ 1.417250] alg_test.part.14+0x360/0x380 [ 1.417414] do_test+0x4e74/0x5eed [tcrypt] [ 1.417595] do_test+0x5edd/0x5eed [tcrypt] [ 1.417782] ? 0xffffffffc026a000 [ 1.417949] tcrypt_mod_init+0x50/0x1000 [tcrypt] [ 1.418079] ? 0xffffffffc026a000 [ 1.418216] do_one_initcall+0x4e/0x1d4 [ 1.418379] ? free_unref_page_commit+0x85/0xf0 [ 1.418560] ? _cond_resched+0x15/0x30 [ 1.418878] ? kmem_cache_alloc_trace+0x17f/0x1e0 [ 1.419224] do_init_module+0x5a/0x210 [ 1.419464] load_module.isra.71+0x20cb/0x27e0 [ 1.419704] ? m_show+0x1c0/0x1c0 [ 1.419964] ? vmap_page_range_noflush+0x282/0x420 [ 1.420286] __do_sys_init_module+0x11c/0x180 [ 1.420575] do_syscall_64+0x5b/0x1a0 [ 1.420834] entry_SYSCALL_64_after_hwframe+0x44/0xa9 [ 1.421277] RIP: 0033:0x7faeb2b42fca [ 1.421516] Code: 48 8b 0d a9 7e 2c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 49 89 ca b8 af 00 00 00 0f 05 \u0026lt;48\u0026gt; 3d 01 f0 ff ff 73 01 c3 48 8b 0d 76 7e 2c 00 f7 d8 64 89 01 48 [ 1.422164] RSP: 002b:00007fff584491d8 EFLAGS: 00000206 ORIG_RAX: 00000000000000af [ 1.422555] RAX: ffffffffffffffda RBX: 0000000000a903d0 RCX: 00007faeb2b42fca [ 1.422828] RDX: 000000000041a96e RSI: 000000000001f05b RDI: 0000000000a9f350 [ 1.423099] RBP: 000000000041a96e R08: 0000000000000000 R09: 0000000000a93ee0 [ 1.423449] R10: 0000000000a93e00 R11: 0000000000000206 R12: 0000000000a9f350 [ 1.423722] R13: 0000000000a905a0 R14: 0000000000040000 R15: 0000000000000000 [ 1.424063] Kernel Offset: 0x2d000000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff) [ 1.424682] ---[ end Kernel panic - not syncing: cfb(aes): cfb(aes) alg self test failed in fips mode! ]--- [ 1.425439] ------------[ cut here ]------------ [ 1.425751] sched: Unexpected reschedule of offline CPU#0! [ 1.426092] WARNING: CPU: 1 PID: 407 at arch/x86/kernel/smp.c:128 native_smp_send_reschedule+0x39/0x40 [ 1.426728] Modules linked in: tcrypt(+) authenc cmac wp512 twofish_generic twofish_x86_64_3way twofish_x86_64 twofish_common tea sha512_ssse3 sha512_generic sha256_ssse3 sha1_ssse3 serpent_sse2_x86_64 serpent_generic seed salsa20_generic rmd320 rmd256 rmd160 rmd128 michael_mic md4 khazad fcrypt dm_crypt des3_ede_x86_64 des_generic crc32c_intel ccm cast6_generic cast_common camellia_generic camellia_x86_64 blowfish_generic blowfish_x86_64 blowfish_common arc4 ansi_cprng vfio_pci irqbypass vfio_virqfd vfio_iommu_type1 vfio ipmi_devintf ipmi_msghandler [ 1.428579] CPU: 1 PID: 407 Comm: modprobe Not tainted 4.19.84-300.el7.x86_64 #1 [ 1.429074] Hardware name: Nutanix AHV, BIOS 1.11.0-2.el7 04/01/2014 [ 1.429404] RIP: 0010:native_smp_send_reschedule+0x39/0x40 [ 1.429661] Code: 0f 92 c0 84 c0 74 15 48 8b 05 03 55 14 01 be fd 00 00 00 48 8b 40 30 e9 d5 d7 ba 00 89 fe 48 c7 c7 98 bc 0b af e8 c7 fb 05 00 \u0026lt;0f\u0026gt; 0b c3 0f 1f 40 00 0f 1f 44 00 00 53 48 83 ec 20 65 48 8b 04 25 [ 1.430412] RSP: 0018:ffff9a6438043cf8 EFLAGS: 00010082 [ 1.430723] RAX: 0000000000000000 RBX: ffff9a642f583b80 RCX: 0000000000000006 [ 1.431079] RDX: 0000000000000000 RSI: 0000000000000086 RDI: ffff9a64380568f0 [ 1.431464] RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000390 [ 1.431808] R10: 0000000000000000 R11: 0000000000000000 R12: ffff9a642f58435c [ 1.432167] R13: 0000000000000000 R14: 0000000000000046 R15: 0000000000020400 [ 1.432505] FS: 00007faeb367e740(0000) GS:ffff9a6438040000(0000) knlGS:0000000000000000 [ 1.433027] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 1.433367] CR2: 00007f73d061c288 CR3: 00000001304d6000 CR4: 00000000003006e0 [ 1.433718] Call Trace: [ 1.434014] \u0026lt;IRQ\u0026gt; [ 1.434310] try_to_wake_up+0x3f0/0x450 [ 1.434623] __wake_up_common+0x8f/0x160 [ 1.434939] ep_poll_callback+0x1af/0x300 [ 1.435263] __wake_up_common+0x8f/0x160 [ 1.435563] __wake_up_common_lock+0x7a/0xc0 [ 1.435895] irq_work_run_list+0x4c/0x70 [ 1.436228] ? tick_sched_do_timer+0x80/0x80 [ 1.436548] update_process_times+0x3b/0x50 [ 1.436854] tick_sched_handle+0x25/0x60 [ 1.437176] tick_sched_timer+0x37/0x70 [ 1.437485] __hrtimer_run_queues+0xfb/0x270 [ 1.437800] hrtimer_interrupt+0x122/0x270 [ 1.438104] smp_apic_timer_interrupt+0x6a/0x140 [ 1.438446] apic_timer_interrupt+0xf/0x20 [ 1.438764] \u0026lt;/IRQ\u0026gt; [ 1.439049] RIP: 0010:panic+0x209/0x25c [ 1.439381] Code: 83 3d 36 d6 8e 01 00 74 05 e8 3f 60 02 00 48 c7 c6 20 32 9a af 48 c7 c7 d0 6e 0c af 31 c0 e8 8e 5e 06 00 fb 66 0f 1f 44 00 00 \u0026lt;45\u0026gt; 31 e4 e8 0b c0 0c 00 4d 39 ec 7c 1e 41 83 f6 01 48 8b 05 db d5 [ 1.440264] RSP: 0018:ffffadfd0144baf8 EFLAGS: 00000246 ORIG_RAX: ffffffffffffff13 [ 1.440783] RAX: 0000000000000060 RBX: 0000000000000000 RCX: 0000000000000006 [ 1.441211] RDX: 0000000000000000 RSI: 0000000000000092 RDI: ffff9a64380568f0 [ 1.441639] RBP: ffffadfd0144bb68 R08: 0000000000000000 R09: 000000000000038e [ 1.442034] R10: 0000000000000000 R11: 0000000000000000 R12: ffffffffaf105b38 [ 1.442449] R13: 0000000000000000 R14: 0000000000000000 R15: ffffadfd0144be88 [ 1.442829] ? panic+0x202/0x25c [ 1.443135] alg_test.part.14+0x360/0x380 [ 1.443494] do_test+0x4e74/0x5eed [tcrypt] [ 1.443838] do_test+0x5edd/0x5eed [tcrypt] [ 1.444160] ? 0xffffffffc026a000 [ 1.444484] tcrypt_mod_init+0x50/0x1000 [tcrypt] [ 1.444811] ? 0xffffffffc026a000 [ 1.445121] do_one_initcall+0x4e/0x1d4 [ 1.445466] ? free_unref_page_commit+0x85/0xf0 [ 1.445802] ? _cond_resched+0x15/0x30 [ 1.446104] ? kmem_cache_alloc_trace+0x17f/0x1e0 [ 1.446467] do_init_module+0x5a/0x210 [ 1.446789] load_module.isra.71+0x20cb/0x27e0 [ 1.447140] ? m_show+0x1c0/0x1c0 [ 1.447474] ? vmap_page_range_noflush+0x282/0x420 [ 1.447815] __do_sys_init_module+0x11c/0x180 [ 1.448188] do_syscall_64+0x5b/0x1a0 [ 1.448540] entry_SYSCALL_64_after_hwframe+0x44/0xa9 [ 1.448867] RIP: 0033:0x7faeb2b42fca [ 1.449181] Code: 48 8b 0d a9 7e 2c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 49 89 ca b8 af 00 00 00 0f 05 \u0026lt;48\u0026gt; 3d 01 f0 ff ff 73 01 c3 48 8b 0d 76 7e 2c 00 f7 d8 64 89 01 48 [ 1.450132] RSP: 002b:00007fff584491d8 EFLAGS: 00000206 ORIG_RAX: 00000000000000af [ 1.450718] RAX: ffffffffffffffda RBX: 0000000000a903d0 RCX: 00007faeb2b42fca [ 1.451076] RDX: 000000000041a96e RSI: 000000000001f05b RDI: 0000000000a9f350 [ 1.451493] RBP: 000000000041a96e R08: 0000000000000000 R09: 0000000000a93ee0 [ 1.451867] R10: 0000000000a93e00 R11: 0000000000000206 R12: 0000000000a9f350 [ 1.452213] R13: 0000000000a905a0 R14: 0000000000040000 R15: 0000000000000000 [ 1.452568] ---[ end trace bce24ab776ddad45 ]--- ","date":"2021-02-17T10:17:25+09:00","permalink":"https://mkashi.com/p/kernel-panic-from-4.19.84-300.el7.x86_64/","title":"Kernel panic from 4.19.84-300.el7.x86_64"},{"content":"自分で運用しているDNSサーバを使ってCertbotによるLet’s Encryptの証明書の自動更新を行う。 下記のcertbot-renew.shを1日に1回など定期的に実行する。deploy-hookは使ってるhttpdをリロードするコマンドを入れる。\n1 2 3 #!/bin/sh /usr/bin/certbot renew --preferred-challenges dns-01 --manual-auth-hook /root/bin/auth-hook.sh --manual-cleanup-hook /root/bin/clean-hook.sh --deploy-hook \u0026#34;systemctl reload apache2\u0026#34; auth-hook.sh: DNSサーバにTXTレコードを仕込むシェルスクリプト\n1 2 3 4 5 #!/bin/sh echo \u0026#34;_acme-challenge.${CERTBOT_DOMAIN}. IN TXT \\\u0026#34;${CERTBOT_VALIDATION}\\\u0026#34;\u0026#34; | ssh dns \u0026#34;cat \u0026gt;\u0026gt;/etc/bind/mkashi.com.zone\u0026#34; ssh dns systemctl restart bind9 ssh dns cat /etc/bind/mkashi.com.zone clean-hook.sh: DNSサーバからTXTレコードを削除するスクリプト\n1 2 3 4 5 #!/bin/sh ssh dns \u0026#34;sed -i -e \u0026#39;/_acme-challenge.${CERTBOT_DOMAIN}. IN TXT \\\u0026#34;${CERTBOT_VALIDATION}\\\u0026#34;/d\u0026#39; /etc/bind/mkashi.com.zone\u0026#34; ssh dns systemctl restart bind9 ssh dns cat /etc/bind/mkashi.com.zone ","date":"2021-01-23T10:17:25+09:00","permalink":"https://mkashi.com/p/certbot%E3%81%AB%E3%82%88%E3%82%8Blets-encrypt%E3%81%AE%E8%87%AA%E5%8B%95%E6%9B%B4%E6%96%B0/","title":"CertbotによるLet’s Encryptの自動更新"},{"content":"libvitで以下のような感じで起動に失敗する場合の対処法\n1 2 error: Failed to start domain dns error: internal error: backing store for /var/lib/libvirt/images/dns.latest (/var/lib/libvirt/images/dns.20201226050002-snap) is self-referential 対象VMのスナップショット一覧を確認\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 root@mks-m75q-1:~# ll /var/lib/libvirt/images/dns.* -rw------- 1 libvirt-qemu kvm 2721972224 12月 18 11:00 /var/lib/libvirt/images/dns.20201212001502-snap -rw------- 1 libvirt-qemu kvm 24838144 12月 18 11:00 /var/lib/libvirt/images/dns.20201218050002-snap -rw------- 1 libvirt-qemu kvm 3407872 12月 18 09:48 /var/lib/libvirt/images/dns.20201218093744-snap -rw------- 1 libvirt-qemu kvm 4521984 12月 18 09:59 /var/lib/libvirt/images/dns.20201218094746-snap -rw------- 1 libvirt-qemu kvm 45416448 12月 18 10:16 /var/lib/libvirt/images/dns.20201218095908-snap -rw------- 1 libvirt-qemu kvm 8781824 12月 18 10:36 /var/lib/libvirt/images/dns.20201218101540-snap -rw------- 1 libvirt-qemu kvm 3670016 12月 18 10:39 /var/lib/libvirt/images/dns.20201218103530-snap -rw------- 1 libvirt-qemu kvm 33816576 12月 18 10:48 /var/lib/libvirt/images/dns.20201218103837-snap -rw------- 1 libvirt-qemu kvm 4194304 12月 18 10:51 /var/lib/libvirt/images/dns.20201218104836-snap -rw------- 1 libvirt-qemu kvm 4259840 12月 18 10:56 /var/lib/libvirt/images/dns.20201218105121-snap -rw------- 1 libvirt-qemu kvm 3735552 12月 18 11:00 /var/lib/libvirt/images/dns.20201218105635-snap -rw------- 1 libvirt-qemu kvm 288358400 12月 19 05:00 /var/lib/libvirt/images/dns.20201218110021-snap -rw------- 1 libvirt-qemu kvm 591462400 12月 20 05:00 /var/lib/libvirt/images/dns.20201219050001-snap -rw------- 1 libvirt-qemu kvm 252968960 12月 21 05:00 /var/lib/libvirt/images/dns.20201220050001-snap -rw------- 1 libvirt-qemu kvm 283901952 12月 22 05:00 /var/lib/libvirt/images/dns.20201221050001-snap -rw------- 1 libvirt-qemu kvm 83034112 12月 23 05:00 /var/lib/libvirt/images/dns.20201222050001-snap -rw------- 1 libvirt-qemu kvm 243269632 12月 24 05:00 /var/lib/libvirt/images/dns.20201223050001-snap -rw------- 1 libvirt-qemu kvm 261750784 12月 25 05:00 /var/lib/libvirt/images/dns.20201224050002-snap -rw------- 1 libvirt-qemu kvm 246022144 12月 26 05:00 /var/lib/libvirt/images/dns.20201225050001-snap -rw------- 1 root root 225443840 12月 26 18:40 /var/lib/libvirt/images/dns.20201226050002-snap lrwxrwxrwx 1 root root 47 12月 26 05:00 /var/lib/libvirt/images/dns.latest -\u0026gt; /var/lib/libvirt/images/dns.20201226050002-snap -rw-rw-r-- 1 libvirt-qemu kvm 13776781312 12月 12 10:07 /var/lib/libvirt/images/dns.qcow2 各スナップショットのbacking fileを確認 何故か/var/lib/libvirt/images/dns.20201218104836-snapが/var/lib/libvirt/images/dns.latestを指してる\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 root@mks-m75q-1:~# ls /var/lib/libvirt/images/dns.* | while read line;do qemu-img info $line;done | grep \u0026#34;backing file:\u0026#34; image: /var/lib/libvirt/images/dns.20201212001502-snap backing file: /var/lib/libvirt/images/dns.qcow2 image: /var/lib/libvirt/images/dns.20201218050002-snap backing file: /var/lib/libvirt/images/dns.20201212001502-snap image: /var/lib/libvirt/images/dns.20201218093744-snap backing file: /var/lib/libvirt/images/dns.20201218050002-snap image: /var/lib/libvirt/images/dns.20201218094746-snap backing file: /var/lib/libvirt/images/dns.20201218093744-snap image: /var/lib/libvirt/images/dns.20201218095908-snap backing file: /var/lib/libvirt/images/dns.20201218094746-snap image: /var/lib/libvirt/images/dns.20201218101540-snap backing file: /var/lib/libvirt/images/dns.20201218095908-snap image: /var/lib/libvirt/images/dns.20201218103530-snap backing file: /var/lib/libvirt/images/dns.20201218101540-snap image: /var/lib/libvirt/images/dns.20201218103837-snap backing file: /var/lib/libvirt/images/dns.20201218103530-snap image: /var/lib/libvirt/images/dns.20201218104836-snap backing file: /var/lib/libvirt/images/dns.latest image: /var/lib/libvirt/images/dns.20201218105121-snap backing file: /var/lib/libvirt/images/dns.20201218104836-snap image: /var/lib/libvirt/images/dns.20201218105635-snap backing file: /var/lib/libvirt/images/dns.20201218105121-snap image: /var/lib/libvirt/images/dns.20201218110021-snap backing file: /var/lib/libvirt/images/dns.20201218105635-snap image: /var/lib/libvirt/images/dns.20201219050001-snap backing file: /var/lib/libvirt/images/dns.20201218110021-snap image: /var/lib/libvirt/images/dns.20201220050001-snap backing file: /var/lib/libvirt/images/dns.20201219050001-snap image: /var/lib/libvirt/images/dns.20201221050001-snap backing file: /var/lib/libvirt/images/dns.20201220050001-snap image: /var/lib/libvirt/images/dns.20201222050001-snap backing file: /var/lib/libvirt/images/dns.20201221050001-snap image: /var/lib/libvirt/images/dns.20201223050001-snap backing file: /var/lib/libvirt/images/dns.20201222050001-snap image: /var/lib/libvirt/images/dns.20201224050002-snap backing file: /var/lib/libvirt/images/dns.20201223050001-snap image: /var/lib/libvirt/images/dns.20201225050001-snap backing file: /var/lib/libvirt/images/dns.20201224050002-snap image: /var/lib/libvirt/images/dns.20201226050002-snap backing file: /var/lib/libvirt/images/dns.20201225050001-snap image: /var/lib/libvirt/images/dns.latest backing file: /var/lib/libvirt/images/dns.20201225050001-snap image: /var/lib/libvirt/images/dns.qcow2 backing fileを正しいスナップショットに修正\n1 qemu-img rebase -u -f qcow2 -F qcow2 -b /var/lib/libvirt/images/dns.20201218103837-snap /var/lib/libvirt/images/dns.20201218104836-snap backing fileが正しくなったのを確認\n1 2 3 4 5 6 7 8 9 10 11 12 13 root@mks-m75q-1:~# qemu-img info /var/lib/libvirt/images/dns.20201218104836-snap image: /var/lib/libvirt/images/dns.20201218104836-snap file format: qcow2 virtual size: 25 GiB (26843545600 bytes) disk size: 3.95 MiB cluster_size: 65536 backing file: /var/lib/libvirt/images/dns.20201218103837-snap backing file format: qcow2 Format specific information: compat: 1.1 lazy refcounts: false refcount bits: 16 corrupt: false 参考情報 https://blog.programster.org/qemu-img-cheatsheet\n","date":"2020-12-26T10:17:25+09:00","permalink":"https://mkashi.com/p/libvirt%E3%81%A7backing-store-for-image-is-self-referential%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%A7vm%E3%81%AE%E8%B5%B7%E5%8B%95%E3%81%AB%E5%A4%B1%E6%95%97/","title":"libvirtでbacking store for image is self-referentialのエラーでVMの起動に失敗"},{"content":" 1 2 3 4 5 6 vgreduce vgubuntu --removemissing --force pvcreate /dev/nvme0n1p2 vgextend vgubuntu /dev/nvme0n1p2 lvconvert --repair /dev/vgubuntu/root lvconvert --repair /dev/vgubuntu/swap_1 lvs -a -o name,copy_percent,devices vgubuntu ","date":"2020-11-08T10:17:25+09:00","permalink":"https://mkashi.com/p/lvm-raid1%E3%81%AE%E5%BE%A9%E6%97%A7/","title":"LVM raid1の復旧"},{"content":"QNAP QNA-UC5G1Tのドライバをdkmsを使って自動ビルドする。 Aquantiaからaqc111の1.3.3.0を持ってきて、展開する。 Makefileを書き換えないとビルドに失敗するので以下のように書き換える\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 --- aqc111-1.3.3.0/Makefile 2019-07-02 18:36:06.000000000 +0900 +++ aqc111-1.3.3.1/Makefile 2020-10-05 23:57:00.873643349 +0900 @@ -23,7 +23,7 @@ obj-m := $(TARGET).o default: - make -C $(BUILD_DIR) SUBDIRS=$(PWD) modules + make -C $(BUILD_DIR) M=$(shell pwd) modules $(TARGET).o: $(OBJS) $(LD) $(LD_RFLAG) -r -o $@ $(OBJS) @@ -32,7 +32,7 @@ cp -v $(TARGET).ko $(DEST) \u0026amp;\u0026amp; /sbin/depmod -a clean: - $(MAKE) -C $(BUILD_DIR) SUBDIRS=$(PWD) clean + $(MAKE) -C $(BUILD_DIR) M=$(shell pwd) clean .PHONY: modules clean このパッチを当てる\nソースコードと同じディレクトリに下記のdkms.confを作る\n1 2 3 4 5 PACKAGE_NAME=\u0026#34;aqc111\u0026#34; PACKAGE_VERSION=\u0026#34;1.3.3.1\u0026#34; BUILT_MODULE_NAME[0]=\u0026#34;aqc111\u0026#34; DEST_MODULE_LOCATION[0]=\u0026#34;/kernel/drivers/net/usb\u0026#34; AUTOINSTALL=\u0026#34;yes\u0026#34; ソースコードのディレクトリを/usr/src/aqc111-1.3.3.1に移動\n1 2 3 4 5 apt -y install dkms dkms add -m aqc111 -v 1.3.3.1 dkms build -m aqc111 -v 1.3.3.1 dkms install -m aqc111 -v 1.3.3.1 dkms status ","date":"2020-11-01T10:18:25+09:00","permalink":"https://mkashi.com/p/ubuntu-20.04%E3%81%A7aqc111%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89/","title":"Ubuntu 20.04でaqc111のビルド"},{"content":"Aquantiaで公開されている1.3.3.0とUbuntu 20.04のkernel 5.4.0に含まれてるaqc111ドライバではbondがうまく動かないので以下のパッチを当てる必要がある。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 --- aqc111-1.3.3.0/aqc111.c 2019-07-02 18:36:06.000000000 +0900 +++ aqc111-1.3.3.1/aqc111.c 2020-10-07 21:50:30.412367747 +0900 @@ -21,7 +21,7 @@ #include \u0026#34;aq_compat.h\u0026#34; #include \u0026#34;aqc111.h\u0026#34; -#define DRIVER_VERSION \u0026#34;1.3.3.0\u0026#34; +#define DRIVER_VERSION \u0026#34;1.3.3.1\u0026#34; #define DRIVER_NAME \u0026#34;aqc111\u0026#34; static int aqc111_read_cmd_nopm(struct usbnet *dev, u8 cmd, u16 value, @@ -724,17 +724,23 @@ } static int aqc111_set_mac_addr(struct net_device *net, void *p) -{ - struct usbnet *dev = netdev_priv(net); - int ret = 0; - ret = eth_mac_addr(net, p); - if (ret \u0026lt; 0) - return ret; +{ + struct usbnet *dev = netdev_priv(net); + int ret = 0; - /* Set the MAC address */ - return aqc111_write_cmd(dev, AQ_ACCESS_MAC, SFR_NODE_ID, ETH_ALEN, - ETH_ALEN, net-\u0026gt;dev_addr); + ret = eth_mac_addr(net, p); + if (ret \u0026lt; 0) + return ret; + + /* Set the MAC address */ + ret = aqc111_write_cmd(dev, AQ_ACCESS_MAC, SFR_NODE_ID, ETH_ALEN, + ETH_ALEN, net-\u0026gt;dev_addr); + + if (ret \u0026lt; 0) + return ret; + + return (ret == ETH_ALEN) ? 0 : -1; } static int aqc111_vlan_rx_kill_vid(struct net_device *net, @@ -1013,6 +1019,7 @@ dev-\u0026gt;net-\u0026gt;hw_features |= AQ_SUPPORT_HW_FEATURE; dev-\u0026gt;net-\u0026gt;features |= AQ_SUPPORT_FEATURE; dev-\u0026gt;net-\u0026gt;vlan_features |= AQ_SUPPORT_VLAN_FEATURE; + dev-\u0026gt;net-\u0026gt;priv_flags |= IFF_LIVE_ADDR_CHANGE; aqc111_read_fw_version(dev, aqc111_data); aqc111_data-\u0026gt;autoneg = AUTONEG_ENABLE; ","date":"2020-11-01T10:17:25+09:00","permalink":"https://mkashi.com/p/aqc111%E3%81%A7bond%E3%82%92%E4%BD%BF%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B/","title":"aqc111でbondを使えるようにする"},{"content":"インストール\n1 apt install pcs haclusterユーザのパスワード設定\n1 passwd hacluster インストール後はデフォルトでnode1というホストでクラスタが組まれておりこいつが邪魔をして設定ができないので消す\n1 pcs cluster destroy クラスタを組む\n1 2 pcs host auth \u0026lt;host1\u0026gt; \u0026lt;host2\u0026gt; \u0026lt;host3\u0026gt; -u hacluster pcs cluster setup \u0026lt;cluster_name\u0026gt; \u0026lt;host1\u0026gt; \u0026lt;host2\u0026gt; \u0026lt;host3\u0026gt; --start --enable STONITHを無効にする\n1 pcs property set stonith-enabled=false クラスタにVirtual IPを追加する\n1 pcs resource create VirtualIP ocf:heartbeat:IPaddr2 ip=192.168.151.254 cidr_netmask=22 nic=br0 op monitor interval=10s ステータス確認\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 root@mks-m75q-1:~# pcs status Cluster name: mks-m75q Cluster Summary: * Stack: corosync * Current DC: mks-m75q-3 (version 2.0.3-4b1f869f0f) - partition with quorum * Last updated: Sat Oct 31 20:58:20 2020 * Last change: Sat Oct 31 20:30:47 2020 by root via cibadmin on mks-m75q-1 * 3 nodes configured * 1 resource instance configured Node List: * Online: [ mks-m75q-1 mks-m75q-2 mks-m75q-3 ] Full List of Resources: * VirtualIP (ocf::heartbeat:IPaddr2): Started mks-m75q-1 Daemon Status: corosync: active/enabled pacemaker: active/enabled pcsd: active/enabled VMのHA\n1 pcs resource create vm-name ocf:heartbeat:VirtualDomain config=/etc/libvirt/qemu/name.xml migration_transport=ssh meta allow-migrate=true https://access.redhat.com/documentation/ja-jp/red_hat_enterprise_linux/6/html/configuring_the_red_hat_high_availability_add-on_with_pacemaker/remotenode_config\n","date":"2020-10-31T10:17:25+09:00","permalink":"https://mkashi.com/p/ubuntu-20.04%E3%81%A7pacemaker%E3%82%92%E4%BD%BF%E3%81%86/","title":"Ubuntu 20.04でpacemakerを使う"},{"content":"インストール CentOS7,8 yum install -y postfix cyrus-sasl cyrus-sasl-plain mailx\nDebian apt install -y postfix libsasl2-2 libsasl2-modules bsd-mailx\n設定 /etc/postfix/main.cf に以下を追記 1 2 3 4 5 6 relayhost = [mail.so-net.ne.jp]:587 smtp_sasl_auth_enable = yes smtp_sasl_mechanism_filter = plain smtp_sasl_password_maps = hash:/etc/postfix/so-net_passwd smtp_sasl_security_options = noanonymous smtp_sasl_tls_security_options = noanonymous /etc/postfix/so-net_passwd を作成し、下記内容を記載 1 2 [mail.so-net.ne.jp]:587 ユーザID:パスワード postmap hash:/etc/postfix/so-net_passwd Postfix再起動 必要に応じて/etc/alias編集\n1 2 3 systemctl enable postfix; systemctl restart postfix; newaliases; ","date":"2020-10-25T10:19:25+09:00","permalink":"https://mkashi.com/p/postfix%E3%81%A7so-net%E3%81%AE%E3%83%A1%E3%83%BC%E3%83%AB%E3%82%B5%E3%83%BC%E3%83%90%E7%B5%8C%E7%94%B1%E3%81%A7%E9%80%81%E4%BF%A1/","title":"Postfixでso-netのメールサーバ経由で送信"},{"content":" 1 2 3 4 5 echo raid1 \u0026gt;\u0026gt;/etc/initramfs-tools/modules update-initramfs -c -k $(uname -r) echo \u0026#34;initramfs initrd.img-$(uname -r) followkernel\u0026#34; \u0026gt;\u0026gt;/boot/config.txt # vi /boot/cmdline.txt root=/dev/mapper/system-rootfs ","date":"2020-10-25T10:18:25+09:00","permalink":"https://mkashi.com/p/raspberry-pi-%E3%81%A7lvm-raid1%E3%82%92%E3%83%AB%E3%83%BC%E3%83%88%E3%83%91%E3%83%BC%E3%83%86%E3%82%A3%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AB%E3%81%99%E3%82%8B/","title":"Raspberry Pi でLVM raid1をルートパーティションにする"},{"content":"ラズパイ4でUSB HDDがうまく動かなかったときのワークアラウンド\n1 echo \u0026#34;usb-storage.quirks=0x0080:0x0578:u\u0026#34; \u0026gt;\u0026gt;/boot/cmdline.txt ","date":"2020-10-25T10:17:25+09:00","permalink":"https://mkashi.com/p/usb-hdd%E3%81%A7uas%E3%82%92%E7%84%A1%E5%8A%B9%E5%8C%96/","title":"USB HDDでUASを無効化"},{"content":"nmtuiではできないっぽいのでnmcliでやる\nbridgeとbondingの組み合わせ まずbridgeを作る\n1 2 3 4 5 nmcli c add type bridge ifname br0 con-name br0 nmcli c mod br0 bridge.stp no nmcli c mod br0 ipv4.method manual ipv4.address \u0026#34;192.168.1.100/24\u0026#34; ipv4.gateway \u0026#34;192.168.1.1\u0026#34; ipv4.dns \u0026#34;8.8.8.8 8.8.4.4\u0026#34; ipv4.dns-search lan nmcli c down br0 nmcli c up br0 bridgeにbondingを追加\n1 2 3 4 5 6 7 8 9 10 nmcli c add type bond ifname bond0 con-name bond0 mode active-backup nmcli c mod bond0 connection.master br0 connection.slave-type bridge nmcli c add type bond-slave ifname enpxxx con-name bond-slave-enpxxx master bond0 nmcli c add type bond-slave ifname enpyyy con-name bond-slave-enpyyy master bond0 nmcli c down bond-slave-enpxxx nmcli c down bond-slave-enpyyy nmcli c down bond0 nmcli c up bond-slave-enpxxx nmcli c up bond-slave-enpyyy nmcli c up bond0 bridgeとbondingの組み合わせで更にVLANも指定する まず上のbridgeとbonding組み合わせを作る\nVLAN ID2の場合\n1 2 3 4 5 6 7 8 9 10 nmcli c add type bridge ifname br0.2 con-name br0.2;\\ nmcli c mod br0.2 bridge.stp no;\\ nmcli c mod br0.2 ipv4.method disable;\\ nmcli c mod br0.2 ipv6.method disable;\\ nmcli c down br0.2;\\ nmcli c up br0.2;\\ nmcli c add type vlan ifname bond0.2 con-name bond0.2 dev bond0 id 2;\\ nmcli c mod bond0.2 connection.master br0.2 connection.slave-type bridge;\\ nmcli c down bond0.2;\\ nmcli c up bond0.2; VLAN ID3の場合\n1 2 3 4 5 6 7 8 9 10 nmcli c add type bridge ifname br0.3 con-name br0.3;\\ nmcli c mod br0.3 bridge.stp no;\\ nmcli c mod br0.3 ipv4.method disable;\\ nmcli c mod br0.3 ipv6.method disable;\\ nmcli c down br0.3;\\ nmcli c up br0.3;\\ nmcli con add type vlan ifname bond0.3 con-name bond0.3 dev bond0 id 3;\\ nmcli c mod bond0.3 connection.master br0.3 connection.slave-type bridge;\\ nmcli c down bond0.3;\\ nmcli c up bond0.3; ","date":"2020-10-25T10:16:25+09:00","permalink":"https://mkashi.com/p/nmcli%E3%81%A7bridge%E3%81%A8bonding%E3%81%A8vlan%E3%82%92%E7%B5%84%E3%81%BF%E5%90%88%E3%82%8F%E3%81%9B%E3%82%8B/","title":"nmcliでbridgeとbondingとvlanを組み合わせる"}]